plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.chungjin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }	//iamport 라이브러리 추가하기 위함
}

//plain jar 생성 X 설정
jar {
	enabled = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Thymeleaf 적용
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	//MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//Mail 전송
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//PortOne(iamport)
	implementation 'com.github.iamport:iamport-rest-client-java:0.1.6'

	//QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//Jackson
	implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.1'

	//WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//Thymeleaf 실시간 반영
	developmentOnly("org.springframework.boot:spring-boot-devtools")
}

tasks.named('test') {
	useJUnitPlatform()
}

//QueryDsl 빌드 옵션
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}